name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-lumen:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_mysql, redis, bcmath, gd, zip
        coverage: none
    
    - name: Install Composer dependencies
      working-directory: ./lumen-api
      run: |
        composer install --prefer-dist --no-progress
        cp .env.example .env
        chmod +x artisan
        echo "JWT_SECRET=test-256-bit-secret-test-256-bit-secret-test-256-bit-secret" >> .env
    
    - name: Run migrations
      working-directory: ./lumen-api
      env:
        APP_ENV: testing
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: test_db
        DB_USERNAME: root
        DB_PASSWORD: password
        CACHE_DRIVER: array
        JWT_SECRET: test-256-bit-secret-test-256-bit-secret-test-256-bit-secret
      run: php artisan migrate --force
    
    - name: Run PHPUnit tests
      working-directory: ./lumen-api
      env:
        APP_ENV: testing
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: test_db
        DB_USERNAME: root
        DB_PASSWORD: password
        REDIS_HOST: 127.0.0.1
        CACHE_DRIVER: array
        JWT_SECRET: test-256-bit-secret-test-256-bit-secret-test-256-bit-secret
      run: vendor/bin/phpunit --no-coverage

  test-node:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      working-directory: ./node-cache-service
      run: npm install
    
    - name: Run tests
      working-directory: ./node-cache-service
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        MYSQL_HOST: localhost
        MYSQL_PORT: 3306
        MYSQL_DATABASE: test_db
        MYSQL_USER: root
        MYSQL_PASSWORD: password
      run: npm test
    
    - name: Build TypeScript
      working-directory: ./node-cache-service
      run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false
    
    - name: Build
      working-directory: ./frontend
      run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-lumen, test-node, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker compose build
    
    - name: Test Docker Compose
      run: |
        docker compose up -d
        sleep 30
        docker compose ps
        docker compose down